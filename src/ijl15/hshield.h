#pragma once

namespace hshield {
	enum HS_Error : int {
		HS_ERR_OK = 0x0,
		HS_ERR_UNKNOWN = 0x1,
		HS_ERR_INVALID_PARAM = 0x2,
		HS_ERR_NOT_INITIALIZED = 0x3,
		HS_ERR_COMPATIBILITY_MODE_RUNNING = 0x4,
		HS_ERR_ALREADY_UNINITIALIZED = 0x5,
		HS_ERR_STRING_CONVERSION_FAILED = 0x6,
		HS_ERR_EXCEPTION_RAISED = 0x7,
		HS_ERR_INVALID_LICENSE = 0x100,
		HS_ERR_INVALID_FILES = 0x101,
		HS_ERR_INIT_DRV_FAILED = 0x102,
		HS_ERR_ANOTHER_SERVICE_RUNNING = 0x103,
		HS_ERR_ALREADY_INITIALIZED = 0x104,
		HS_ERR_DEBUGGER_DETECT = 0x105,
		HS_ERR_EXECUTABLE_FILE_CRACKED = 0x106,
		HS_ERR_NEED_ADMIN_RIGHTS = 0x107,
		HS_ERR_MODULE_INIT_FAILED = 0x108,
		HS_ERR_START_ENGINE_FAILED = 0x200,
		HS_ERR_ALREADY_SERVICE_RUNNING = 0x201,
		HS_ERR_DRV_FILE_CREATE_FAILED = 0x202,
		HS_ERR_REG_DRV_FILE_FAILED = 0x203,
		HS_ERR_START_DRV_FAILED = 0x204,
		HS_ERR_START_THREAD_FAILED = 0x205,
		HS_ERR_ALREADY_GAME_STARTED = 0x206,
		HS_ERR_VIRTUAL_MACHINE_DETECT = 0x207,
		HS_ERR_SERVICE_NOT_RUNNING = 0x301,
		HS_ERR_SERVICE_STILL_RUNNING = 0x302,
		HS_ERR_ALREADY_EXISTED = 0x303,
		HS_ERR_INVALID_DATA = 0x304,
		HS_ERR_NOT_SUPPORTED = 0x305,
		HS_ERR_NEED_UPDATE = 0x401,
		HS_ERR_API_IS_HOOKED = 0x501,
		HS_ERR_GET_SDKVERSION_FAILED = 0x601,
		HS_ERR_LMP_START = 0x701,
		HS_ERR_HSMS_WAIT_TIME_OUT = 0x801,
		HS_ERR_HSMS_WAIT_FAILED = 0x802,
		HS_ERR_HSMS_NOT_RUNNING = 0x803
	};

	enum AHNHS_ACTAPC : int {
		AHNHS_ACTAPC_STATUS_HACKSHIELD_RUNNING = 0x10001,
		AHNHS_ACTAPC_DETECT_ALREADYHOOKED = 0x10101,
		AHNHS_ACTAPC_DETECT_AUTOMOUSE = 0x10102,
		AHNHS_ACTAPC_DETECT_AUTOMACRO = 0x10104,
		AHNHS_ACTAPC_DETECT_HOOKFUNCTION = 0x10301,
		AHNHS_ACTAPC_DETECT_DRIVERFAILED = 0x10302,
		AHNHS_ACTAPC_DETECT_SPEEDHACK = 0x10303,
		AHNHS_ACTAPC_DETECT_MESSAGEHOOK = 0x10306,
		AHNHS_ACTAPC_DETECT_KDTRACE = 0x10307,
		AHNHS_ACTAPC_DETECT_KDTRACE_CHANGED = 0x10308,
		AHNHS_ACTAPC_DETECT_SPEEDHACK_RATIO = 0x1030B,
		AHNHS_ENGINE_DETECT_GAME_HACK = 0x10501,
		AHNHS_ACTAPC_DETECT_MULTI_LOADING = 0x10504,
		AHNHS_ACTAPC_DETECT_ABNORMAL_MEMORY_ACCESS = 0x10601,
		AHNHS_ACTAPC_DETECT_MODULE_CHANGE = 0x10701,
		AHNHS_ACTAPC_DETECT_ENGINEFAILED = 0x10702,
		AHNHS_ACTAPC_DETECT_CODEMISMATCH = 0x10703,
		AHNHS_ACTAPC_DETECT_PROTECTSCREENFAILED = 0x10704,
		AHNHS_ACTAPC_DETECT_MEM_MODIFY_FROM_LMP = 0x10705,
		AHNHS_ACTAPC_DETECT_LMP_FAILED = 0x10706,
		AHNHS_ACTAPC_DETECT_RMEM_MODIFY_FROM_LMP = 0x10709,
		AHNHS_ACTAPC_DETECT_ABNORMAL_FUNCTION_CALL = 0x10801,
		AHNHS_ACTAPC_DETECT_ANTIFREESERVER = 0x10901,
		AHNHS_ACTAPC_DETECT_ABNORMAL_HACKSHIELD_STATUS = 0x10A01
	};

	enum HS_RUNNING_STATUS : int { HS_RUNNING_STATUS_CHECK_MONITORING_THREAD = 1, };

	enum HS_ServiceDispatchCode : int {
		HS_Initialize = 4,
		HS_StartService = 5,
		HS_MakeResponse = 13,
		HS_IsModuleSecure = 20,
		HS_CheckHackShieldRunningStatus = 34
	};

	int __stdcall AhnHS_ServiceDispatch_Hook(unsigned int code, void** params, unsigned int* error);
	int __stdcall _AhnHS_CallbackProc();

	void DetourAhnHS_ServiceDispatch();
	void DetourCreateProcess();

	void BypassHShield();
}
